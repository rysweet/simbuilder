# Docker Compose file for SimBuilder infrastructure services
# Session-aware with dynamic port allocation

services:
  neo4j:
    image: neo4j:5.11
    env_file: .env.session
    ports:
      - "${NEO4J_PORT:-7687}:7687"  # Bolt Protocol
      - "${NEO4J_HTTP_PORT:-7474}:7474"  # HTTP Browser
    environment:
      - NEO4J_AUTH=neo4j/your-secure-password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_default_database=simbuilder
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    # Uses default network automatically created by Docker Compose
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "your-secure-password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  nats:
    image: nats:2.10-alpine
    env_file: .env.session
    ports:
      - "${NATS_PORT:-4222}:4222"  # Client connections
      - "${NATS_HTTP_PORT:-8222}:8222"  # Management UI
      - "${NATS_CLUSTER_PORT:-6222}:6222"  # Cluster connections
    command: [
      "--jetstream", 
      "--store_dir=/data", 
      "--http_port=8222",
      "--cluster_name=${COMPOSE_PROJECT_NAME:-simbuilder}-cluster"
    ]
    volumes:
      - nats_data:/data
    # Uses default network automatically created by Docker Compose
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/varz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    env_file: .env.session
    ports:
      - "${AZURITE_BLOB_PORT:-10000}:10000"  # Blob service
      - "${AZURITE_QUEUE_PORT:-10001}:10001"  # Queue service
      - "${AZURITE_TABLE_PORT:-10002}:10002"  # Table service
    volumes:
      - azurite_data:/data
    # Uses default network automatically created by Docker Compose
    command: >
      azurite 
      --blobHost 0.0.0.0 
      --queueHost 0.0.0.0 
      --tableHost 0.0.0.0 
      --location /data 
      --debug /data/debug.log
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Placeholder services for future components
  core-api:
    image: alpine:latest
    env_file: .env.session
    ports:
      - "${CORE_API_PORT:-8080}:8080"
    # Uses default network automatically created by Docker Compose
    command: ["sleep", "infinity"]
    profiles: ["full"]  # Only start with --profile full

  api-gateway:
    image: alpine:latest
    env_file: .env.session
    ports:
      - "${API_GATEWAY_PORT:-8090}:8090"
    # Uses default network automatically created by Docker Compose
    command: ["sleep", "infinity"]
    profiles: ["full"]  # Only start with --profile full

# Note: Volume names use project prefix automatically via Docker Compose
# The actual volume names will be: {COMPOSE_PROJECT_NAME}_neo4j_data, etc.
volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  nats_data:
    driver: local
  azurite_data:
    driver: local

# Docker Compose automatically creates a default network for the project
# Network name will be: {COMPOSE_PROJECT_NAME}_default